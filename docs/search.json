[{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"loading-swatfarmr","dir":"Articles","previous_headings":"","what":"Loading SWATfarmR","title":"Getting started with SWATfarmR","text":"can install SWATfarmR GitHub repository. install R package yet, install remotes::install_github(). start exploring package load SWATfarmR.","code":"# If the package remotes is not installed run first: install.packages('remotes')  remotes::install_github('chrisschuerz/SWATfarmR') library(SWATfarmR)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"demo-data","dir":"Articles","previous_headings":"","what":"Demo data","title":"Getting started with SWATfarmR","text":"work SWATfarmR need SWAT model setup want schedule farm management operations file define management operation sequences rules base operation scheduling. now refer file management input file. SWATdata provides set fast running, lightweight SWAT2012 SWAT+ model setups head watershed Little River Experimental Watershed (LREW; Bosch et al. (2007)). SWATfarmR comes demo management input file provides operation templates SWAT+ model setup available SWATdata. Although code can also install SWATdata , recommend install start working example . install SWATdata can use remotes package.","code":"remotes::install_github('chrisschuerz/SWATdata')"},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"loading-the-demo-data","dir":"Articles","previous_headings":"Demo data","what":"Loading the demo data","title":"Getting started with SWATfarmR","text":"Demo data can loaded function load_demo(). input argument dataset define data want load. load SWAT project simply define dataset = 'project'. path defines path local hard drive want store SWAT project folder. Please try avoid blanks path names (e.g. ‘C://path blanks’). can cause issues running model. Try use e.g. ’_’ path names instead. SWAT project available SWAT+ SWAT2012 project specify version SWAT project want load. moment demo SWAT+ available. , use version = 'plus' load SWAT+ project . load SWAT project load_demo() saves defined SWAT project file path defined path = demo_path returns final demo project path character string R. assigned output load_demo variable proj_path use path later SWATfarmR. set dataset = 'schedule' can load demo management input file SWAT+ demo project. use path = demo_path define path csv file written. Although demo management input file available SWAT+ available moment define version = 'plus'. load_demo() returns path csv file character string R useful SWATfarmR workflow. assigned file path variable mgt_path. management input file key control management scheduling SWATfarmR. Setting file requires keep clear file structure. rules control management scheduling can make use several variables eventually affect operation dates set management schedules. worth detailed look file.","code":"# The path where the SWAT demo project will be written demo_path <- 'Define:/your/path'  # Loading a SWAT+ demo project proj_path <- load_demo(dataset = 'project',                         path = demo_path,                        version = 'plus') # Loading a SWAT+ demo project mgt_path <- load_demo(dataset = 'schedule',                        path = demo_path,                       version = 'plus') #> Warning in load_demo(dataset = \"project\", path = demo_path, version = \"+\"): Demo #> already exists in provided 'path'. To work with the existing demo project use #> the returned path."},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"the-management-input-file","dir":"Articles","previous_headings":"","what":"The management input file","title":"Getting started with SWATfarmR","text":"SWATfarmR workflow reads management operations csv file. Depending complex define management SWAT model setup file can rather long. csv file can edited prepared spreadsheet software, Excel Libre office Calc may easier processing file R. image shows minimum example management input file SWAT+ model setup. columns land_use, management, weight, filter_attribute, condition_schedule SWAT2012 SWAT+ required table even left empty. remaining columns SWAT version dependent actual operation parameters written management schedules SWAT model input files. SWAT+ management operations consist operation type three parameters operation called op_data1, op_data2, op_data3. names used column names management input file. SWAT2012 management inputs also use different operation types, operation can controlled 9 different parameters mgt1 mgt9. Thus SWATfarmR management input must prepared SWAT2012 model setups accordingly. following explanations address use SWATfarmR SWAT+ model setups. application SWAT2012 may added future. Fig. 1: Minimum example management input file. table shows operations one land_use one crop. example management alternatives filter_attributes applied. land_use column operations belong one land use grouped together. small example 5 operations scheduled land use ‘lu1_lum’. land uses defined land_use must defined file ‘landuse.lum’ must assigned HRUs ‘hru-data.hru’. Otherwise management implemented model setup. columns management weight always used together. provide option randomly distribute different managements model setup. SWAT modeler can example statistical data implementation conservation farming, data available actual locations implementation. management weight allow random distribution e.g. different tillage types catchment based weighted random sampling using provided weights. Providing information columns optional. Thus cases management weight left empty. filter_unit user option apply operations HRUs fulfill certain criteria defined . criteria can example slope threshold, soil type location (defined routing units). explained. Providing criteria optional cases filter_unit left empty. important column condition_schedule define temporal conditions scheduling operation. conditions can defined flexible endless combinations possible control operation scheduling. flexibility however also potential source error. Thus definition scheduling conditions covered great detail . operation corresponding parameters op_data 1 3 define actual SWAT management. management operations parameters defined must defined SWAT model setup work. example fertilizer application defined op_data1 defines fertilizer type. example ‘elem_n’ applied. fertilizer type must defined SWAT+ input file ‘fertilizer.frt’. Fig. 2: Schematic workflow filtering operation schedules based land_use, management, filter_attribute","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"land_use","dir":"Articles","previous_headings":"The management input file","what":"land_use","title":"Getting started with SWATfarmR","text":"land_use label defines land use class sequences operations defined table belong . scheduling routine SWATfarmR iterates HRUs, routine filters operations management input table land uses column land_use match HRUs land use (defined file ‘hru-data.hru’. See figure .). means must careful define land uses management input table. match land use labels ignored scheduling (e.g. case typos). accidentally put operation sequence land use table twice data used operation scheduling (careful copy/pasting!).","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"management-and-weight","dir":"Articles","previous_headings":"The management input file","what":"management and weight","title":"Getting started with SWATfarmR","text":"management weight can introduce different management types want apply HRUs weighted random sampling. useful want translate statistical information farm management SWAT model setup. Fig. 3: Filtering operations based different management alternatives. Let us assume example know agricultural statistics land_use ‘lu1_lum’ (selected current HRU) 40% farmers conventional farming 60% organic farming. different practices want implement different tillage types fertilizer types amounts. management input file introduce two different managements tillage fertilizer operations. can select names two different managements. just consistent names operations want introduce alternatives. percentages two farm practices add weights respective operations. tillage alternatives differ selected plough type. fertilizer operations can see ‘conventional’ uses two fertilizer operations ‘organic’ one manure application. operations used managements just keep management weight columns empty. example table can see ‘conventional’ alternative selected current HRU. white rows table removed operation scheduling HRU.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"filter_attribute","dir":"Articles","previous_headings":"The management input file","what":"filter_attribute","title":"Getting started with SWATfarmR","text":"cases want use management practice sequences (e.g. crop rotation) different HRUs, want introduce different operations HRU attributes. might want use different tillage practices different soils, want apply contour farming steeper slopes, example know amounts fertilizer differ regions (may correspond routing units subbasins model setup). Similar different managements can also select operation scheduled HRU, based HRUs attributes. can see hru_attributes table SWATfarmR project. shows attributes implemented select operations moment. attributes can useful practice rtu, soil, slp, slp_len, hyd_grp. can use combine filter conditions attributes many different ways. however clearly consider consequences operation scheduling filter operations based HRU attributes. schematic workflow Fig. 2 can example see introduced 2 conditions complement . conditioning one operation slp >= 0.08 second one slp < 0.08 one two operations used case none operations kept operation schedule. show small examples conditions filter based HRU attributes. want use specific operation example management schedules routing units 1 5, 7, 10 example use following condition: add condition one operation provide alternative routing units use alternative operation. provide alternative locations can example use following condition alternative operation: apply operation soil ‘LREW06’ can use following: alternative : want consider several soils, way : can also combine conditions: operation implemented HRUs soil type ‘LREW06’ routing units 1 5, 7, 10 slopes lower equal 0.08.","code":"#> # A tibble: 49 × 9 #>      rtu rtu_name   hru hru_name lu_mgt    soil      slp slp_len hyd_grp #>    <dbl> <chr>    <dbl> <chr>    <chr>     <chr>   <dbl>   <dbl> <chr>   #>  1     1 rtu10        1 hru01    agrl4_lum LREW06 0.0309      60 B       #>  2     1 rtu10        2 hru02    agrl1_lum LREW06 0.0327      60 B       #>  3     1 rtu10        3 hru03    agrl1_lum LREW10 0.0282      90 D       #>  4     1 rtu10        4 hru04    agrl1_lum LREW09 0.0215      90 C       #>  5     1 rtu10        5 hru05    frse_lum  LREW06 0.0432      60 B       #>  6     1 rtu10        6 hru06    frse_lum  LREW03 0.0386      60 B       #>  7     1 rtu10        7 hru07    frse_lum  LREW10 0.0321      60 D       #>  8     1 rtu10        8 hru08    frse_lum  LREW05 0.0460      60 B       #>  9     1 rtu10        9 hru09    frse_lum  LREW08 0.0582      30 C       #> 10     1 rtu10       10 hru10    agrl2_lum LREW03 0.0363      60 B       #> # … with 39 more rows #> # ℹ Use `print(n = ...)` to see more rows rtu %in% c(1:5, 7, 10) ! rtu %in% c(1:5, 7, 10) soil == 'LREW06' soil != 'LREW06' soil %in% c('LREW06', 'LREW09') soil != 'LREW06' & rtu  %in% c(1:5, 7, 10) & slp <= 0.08"},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"condition_schedule","dir":"Articles","previous_headings":"The management input file","what":"condition_schedule","title":"Getting started with SWATfarmR","text":"condition_schedule controls temporal scheduling management operations. condition definition works similar attribute filtering filter_attribute. main difference filter_attribute requires either TRUE FALSE result filter condition decide whether operation scheduled HRU . condition_schedule, however, allows assign probabilities dates based defined conditions control “likely” operation takes place certain day. Similar filter_attribute default variables user can use define scheduling conditions. table summarizes . Fig. 4 shows management input previous examples selecting rows land_use ‘lu1_lum’ selecting ‘conventional’ management filtering operations specific HRU attributes. can immediately see two things column condition_schedule. conditions similar structure conditions filter_attribute operations condition_schedule left empty. empty condition_schedule can two functions: operation initial_plant use conditions set operation. skip can triggered conditions necessarily need one. operations (e.g. fertilizer application elem_p Fig.4) leaving condition_schedule empty results scheduling operation date previous operation. Fig. 4: Example operation schedule temporal conditions. conditions implemented control scheduling operations example Fig. 4 follow almost pattern. condition plant operation example following: can see uses variables md, pcp, year, prev_op listed table . condition uses two functions w_log() year(). year() available R package lubridate returns year date integer value. w_log() hand function included SWATfarmR. function implements logistic function calculate weights smooth transition upper lower value. Besides w_log() also w_lin() linear transition upper lower value. can see two functions look like. major difference two functions w_log() converges 0 1 boundaries, reach values, w_lin() reaches 0 1 boundaries. Overall always prefer use w_log() condition definition safer risk probabilities operation 0 low thus risking skip scheduling operation. can however happen easily w_lin() resulting 0. Fig. 5: Functional relationship variable two weight functions w_log() w_lin(). now go individual conditions combined multiplying . first two conditions use md. first expression md >= 0427, means combination month day must larger equal 427. translates date year later equal April 27. second expression translates dates year earlier equal May 7. multiply two expressions dates April 27 May 7 get probability 1 dates outside time window probability 0. third expression uses w_log() function together precipitation. second third input argument function define lower upper boundary values transition range. case w_log() returns value 0.01 pcp = 0 value 0.99 pcp = 7. Plotting function shows intention condition. assign daily precipitation values 0 mm weight (almost) 1. Yet, precipitation sums 2 mm still result probability 0.88 4 mm probability dercreases 0.34. Daily precipitation sums larger 7 mm receive weight (almost) 0. condition makes scheduling operations days exceed certain precipitation less likely. Fig. 6: Example using w_log() assign lower weights days higher precipitation. can now combine 3 conditions use combination scheduling plant operation. compare time series precipitation weights based precipitation can see days without precipitation get weight 1 rainy days weight lower one. red bars show combined weights days. can see conditions md define time window April 27 May 7. time window dates excluded lower weight depending precipitation dates. operation scheduling algorithm selects date operation weighted random sampling. Thus dates weight > 0 can selected. Dates larger weights however likely selected dates smaller weights. Fig. 5: Combination 3 conditions combined condition scheduling operation. fourth element entire scheduling condition refers year. necessary md conditions constrain time window month day. time window however given current year scheduling, also future years. Thus, risk scheduling operation skips years. avoid skipping years strongly recommend add constrain current operation must scheduled year previous operation. constrain however apply first operation first operation year crop rotation. case can, however, define operation take place year year previous operation plus 1.","code":"(md >= 0427) * (md <= 0507) * (1 - w_log(pcp, 0, 7)) * (year == year(prev_op)) x <- seq(-0.5,1.5, length.out = 100) log_wgt <- w_log(x, 0, 1) lin_wgt <- w_lin(x, 0, 1)  plot(x, log_wgt, type = 'l', col = 2, ylab = 'weight') lines(x, lin_wgt, col = 4, lty = 2)  legend(\"topleft\", legend=c(\"w_log\", \"w_lin\"),        col=c(\"red\", \"blue\"), lty = 1:2, cex=0.8) (md >= 0427) * (md <= 0507) (1 - w_log(pcp, 0, 7)) pcp <- seq(0, 8, length.out = 100) weight <- (1 - w_log(pcp, 0, 7))  plot(pcp, weight, type = 'l') (year == year(prev_op)) (year == year(prev_op) + 1)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"operation-and-op_data","dir":"Articles","previous_headings":"The management input file","what":"operation and op_data","title":"Getting started with SWATfarmR","text":"columns operation, op_data1, op_data2, op_data3 eventually written ’management.sch’ input file SWAT+ model setup. Different operations require different op_data parameters. Please refer SWAT+ documentation learn define parameters management operations. selection operations available SWAT can trigger SWAT simulation. table lists SWATfarmR labels corresponding SWAT+ labels. non-SWAT specific operation table initial_plant. required input every land_use defined management input file. initial_plant must refer plant community defined ‘plant.ini’ SWAT+ input file.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"a-new-swatfarmr-project-in-r","dir":"Articles","previous_headings":"","what":"A new SWATfarmR project in R","title":"Getting started with SWATfarmR","text":"SWATfarmR uses object based approach work SWAT project. means start new SWATfarmR project object (call farmr project farmr object, refer R object, now ) generated R environment. farmr project stores relevant data SWAT project, weather data HRU attributes provides functions work theses data eventually allows schedule management operation SWAT project. small example use demo data described section Demo data . load demo project demo management input file yet, please continue. start new farmr project use function new_farmr(). function requires two inputs. First name project. name farmr project R name ‘.farm’ file SWAT project folder. want generate several farmr projects SWAT project, different names. function also requires path SWAT project hard drive input argument. example call farmr project lrew_demo use path demo SWAT project proj_path already defined section Demo data. Now look R variables. now new object called lrew_demo farmr project. also find file ‘lrew_demo.farm’ SWAT project folder. file work farmr project saved can load farmr project continue work.","code":"new_farmr(project_name ='lrew_demo',            project_path = proj_path)  #>  Finished in 1S"},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"a-quick-look-into-the-farmr-object","dir":"Articles","previous_headings":"A new SWATfarmR project in R","what":"A quick look into the farmr object","title":"Getting started with SWATfarmR","text":"can now start exploring generated farmr object R. see elements new project can use $ operator, like access elements list R. Fig. 6 shows screenshot new farmr object suggestions select element entering $ operator. first 4 elements functions apply operations farmr project. last element .$.data holds data read SWAT project, weather inputs ‘pcp’ ‘tmp’ HRU attributes. 4 functions, .$add_variable() .$read_management() relevant user. .$initialize() synonymous new_farmr() already performed. .$save() can save current state farmr project time. Saving however done operation automatically. Thus, manually saving necessary. executing functions working operation scheduling, new functions activated (e.g. reading management input .$read_management() function .$schedule_operations() becomes visible). Fig. 6: Screenshot new farmr object R.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"reading-the-management-input","dir":"Articles","previous_headings":"A new SWATfarmR project in R","what":"Reading the management input","title":"Getting started with SWATfarmR","text":"now read management input file demo project saved hard drive path mgt_path farmr project. done function .$read_management(). can see loading management input file triggers warning message. management input file define management land uses ‘utrn_lum’ ‘urml_lum’. case OK can ignore warning message want apply management urban land uses. warning message however lists land uses model setup intend implement management go back management input file, include managements missing land uses load .$read_management(). Besides input argument file, .$read_management() also second input argument discard_schedule. can ignore reading management new farmr project. set however discard_schedule = TRUE already scheduled operations management input file, want change management inputs. already scheduled operations match new management input file plan read. case discard already scheduled operations. Reading management input farmr project lrew_demo unlock function .$schedule_operations(). .$schedule_operations() can schedule management operations based operations conditions defined management input file. can just try run operation scheduling see happens. Scheduling operations triggered error. closer look error message tells us object 'api' found error occurred SWATfarmR::w_log(api, 5, 20). looks like one operation conditions management input file. look demo management input file can see actually included variable api scheduling conditions function (1 - w_log(api, 5, 20)). variable api however default variable (see table subsection condition_schedule) add variable farmr project want use scheduling conditions.","code":"lrew_demo$read_management(file = mgt_path)  #> Warning: No management schedules were found for the following SWAT land uses:  #>   utrn_lum, urml_lum #>   If managements should be written for any of these land uses #>   please add them to the management table and read the table again. lrew_demo$schedule_operations()  #> Scheduling operations: #> Error in `mutate()`: #> ! Problem while computing `wgt = ... * (year == (year(prev_op) + 1))`. #> Caused by error in `w_log()`: #> ! object 'api' not found #> Backtrace: #>   1. lrew_demo$schedule_operations() #>  10. SWATfarmR::w_log(api, 5, 20)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"adding-variables","dir":"Articles","previous_headings":"A new SWATfarmR project in R","what":"Adding variables","title":"Getting started with SWATfarmR","text":"intention api condition include antecedent precipitation (api = antecedent precipitation index) condition operation scheduling. disadvantage SWATfarmR compared decision tables SWAT+ operation scheduling SWATfarmR make use values state variables simulation possible decision tables. example decision tables can use soil moisture condition, SWATfarmR must use proxy variable related “wetness” soil.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"excursus-variable_decay","dir":"Articles","previous_headings":"A new SWATfarmR project in R > Adding variables","what":"Excursus variable_decay()","title":"Getting started with SWATfarmR","text":"One approach account precipitation previous days calculate precipitation sums certain number days current day. might however best approach . alternative approach, included function called variable_decay() SWATfarmR assigns weights previous days based exponential decay. example shows weight event day 1 changes following days. Depending decay_rate weight day 1 weight 0.37 decay_rate = 1, still accounted 0.78 decay_rate = 0.25. event day 1 much impact day 5 decay_rate = 1, still weight 0.37 decay_rate = 0.25. Fig. 7: effect decay_rate variable_decay() function. small example illustrate can use variable_decay() account antecedent precipitation. black bars plot daily precipitation sums. calculated variable_decay() including 5 previous days (time_steps <- -5) used two rates 0.25 (black line) 1 (red line). condition api now rule triggered error ((1 - w_log(api, 5, 20))) get lower probabilities days large precipitation event day 4 api time series. red line already 5 mm day 6, black line fall 11.5 mm. Thus, case black line several days rain event lower weights operation scheduling. behaviors two api lines e.g. translated different water retention behaviors different soils. Fig. 8: Two different api time series based precipitation input different decay rates","code":"x <- data.frame(x_1 = c(1,0,0,0,0,0,0,0,0,0,0)) y1<- variable_decay(variable = x, n_steps = -10, decay_rate = 1) y2<- variable_decay(variable = x, n_steps = -10, decay_rate = 0.8) y3<- variable_decay(variable = x, n_steps = -10, decay_rate = 0.25)  plot(y1$x_1, type = \"l\", col = 1, ylab = 'weight', xlab = 'day') lines(y2$x_1, col = 2) lines(y3$x_1, col = 3) pcp <- data.frame(pcp_1 = c(0,3,7,15,2,0,0,5,2,0))  time_steps <- -5  rate1 <- 0.25 api1 <- variable_decay(pcp, time_steps, rate1)  rate2 <- 1 api2 <- variable_decay(pcp, time_steps, rate2)  plot(pcp$pcp_1, ylim = c(0,22), type = 'h',       ylab = 'pcp, api', xlab = 'day') lines(api1$pcp_1, col = 1) lines(api2$pcp_1, col = 2)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"including-api-into-lrew_demo","dir":"Articles","previous_headings":"A new SWATfarmR project in R > Adding variables","what":"Including api into lrew_demo","title":"Getting started with SWATfarmR","text":"now want include new variable api SWATfarmR project lrew_demo uses function variable_decay() account antecedent precipitation. api HRU based precipitation time series linked HRU. small example also want account different hydrological soil groups (HSG) consider faster (hsg == '') slower (hsg == 'D') soil water retention. aware approach works simple way one weather station entire demo watershed. complex example several weather stations also must account links weather stations HRUs. Thus, also require calculate combinations weather stations HSGs, result 4 api variables. first step extract precipitation data HSG information HRUs lrew_demo$.data. next step calculate different apis based precipitation data pcp, using different decay_rates different HSGs. values set decay rates literature values chosen demonstration concept . actual study choice values decay_rate need supporting literature. combine variables api_A api_D together one table assign names 'api_A' 'api_D' columns. final api table looks like. now generated four different time series api depending different retention behaviors based HSGs D. implementation farmr object link different api time series spatial units model setup. Thus, table link variables spatial units must two columns, one ids spatial units one variable link. link e.g. routing unit level use rtu ids, HRUs assigning api column hru id model setup. case link HRUs new variable. variable determines link api columns HRUs HSG HRU. already extracted hsg now link hrus apis, creating table columns hru api. quick look table shows links HRUs api looks like. prepared information need add new variable. can add now new variable farmr object function .$add_variable(). data want add table api prepared. added data must number rows variables already farmr object. ensured case used pcp lrew_demo calculate api. assign variable name = 'api' new variable lrew_demo. name must match variable name used operation conditions management input file must different names already existing variables. third input argument assign_unit links new variable HRUs. defined links hrus apis table hru_asgn now pass .$add_variable. can now check new variable api available lrew_demo. api available lrew_demo$.data$variables$api. connections variables HRUs saved table hru_var_connect. can see besides initially existing variables pcp, tmax, tmin, tav link weather station, now new column links api columns generated.","code":"# Load dplyr. We will use functions such as 'mutate' and 'select'. library(dplyr) # Extract the precipitation from the farmr project pcp <- lrew_demo$.data$variables$pcp  # Extract the hydrologic soil group values for all HRUs hsg <- select(lrew_demo$.data$meta$hru_attributes, hru, hyd_grp) # Calculate api values for the hsg classes A to D api_A <- variable_decay(variable = pcp, n_steps = -5, decay_rate = 1) api_B <- variable_decay(variable = pcp, n_steps = -5, decay_rate = 0.8) api_C <- variable_decay(variable = pcp, n_steps = -5, decay_rate = 0.7) api_D <- variable_decay(variable = pcp, n_steps = -5, decay_rate = 0.5)  # Bind the data together into one api table and name them with the hsgs api <- bind_cols(api_A, api_B, api_C, api_D) names(api) <- c('api_A', 'api_B', 'api_C', 'api_D') api #> # A tibble: 9,131 × 4 #>     api_A api_B api_C api_D #>     <dbl> <dbl> <dbl> <dbl> #>  1 20.3   20.3  20.3  20.3  #>  2 30.3   32.0  33.0  35.2  #>  3 11.2   14.4  16.4  21.3  #>  4  4.11   6.46  8.13 12.9  #>  5  1.51   2.90  4.04  7.85 #>  6  8.18   8.92  9.62 12.4  #>  7  5.50   6.38  7.01  9.04 #>  8  7.05   7.76  8.22  9.42 #>  9  2.59   3.49  4.08  5.72 #> 10  0.954  1.57  2.03  3.47 #> # … with 9,121 more rows #> # ℹ Use `print(n = ...)` to see more rows # To add the variable to the farmR you have to tell it which variables are # assigned to which HRUs hru_asgn <- mutate(hsg, api = paste0('api_', hyd_grp)) %>%    select(hru, api) hru_asgn #> # A tibble: 49 × 2 #>      hru api   #>    <dbl> <chr> #>  1     1 api_B #>  2     2 api_B #>  3     3 api_D #>  4     4 api_C #>  5     5 api_B #>  6     6 api_B #>  7     7 api_D #>  8     8 api_B #>  9     9 api_C #> 10    10 api_B #> # … with 39 more rows #> # ℹ Use `print(n = ...)` to see more rows # Add the variable api to the farmR project lrew_demo$add_variable(data = api, name = 'api', assign_unit = hru_asgn) lrew_demo$.data$variables$api #> # A tibble: 9,131 × 5 #>    date        api_A api_B api_C api_D #>    <date>      <dbl> <dbl> <dbl> <dbl> #>  1 1988-01-02 20.3   20.3  20.3  20.3  #>  2 1988-01-03 30.3   32.0  33.0  35.2  #>  3 1988-01-04 11.2   14.4  16.4  21.3  #>  4 1988-01-05  4.11   6.46  8.13 12.9  #>  5 1988-01-06  1.51   2.90  4.04  7.85 #>  6 1988-01-07  8.18   8.92  9.62 12.4  #>  7 1988-01-08  5.50   6.38  7.01  9.04 #>  8 1988-01-09  7.05   7.76  8.22  9.42 #>  9 1988-01-10  2.59   3.49  4.08  5.72 #> 10 1988-01-11  0.954  1.57  2.03  3.47 #> # … with 9,121 more rows #> # ℹ Use `print(n = ...)` to see more rows lrew_demo$.data$meta$hru_var_connect #> # A tibble: 49 × 9 #>      rtu rtu_name   hru hru_name pcp    tmax     tmin     tav      api   #>    <dbl> <chr>    <dbl> <chr>    <chr>  <chr>    <chr>    <chr>    <chr> #>  1     1 rtu10        1 hru01    pcp144 lrew_tmp lrew_tmp lrew_tmp api_B #>  2     1 rtu10        2 hru02    pcp144 lrew_tmp lrew_tmp lrew_tmp api_B #>  3     1 rtu10        3 hru03    pcp144 lrew_tmp lrew_tmp lrew_tmp api_D #>  4     1 rtu10        4 hru04    pcp144 lrew_tmp lrew_tmp lrew_tmp api_C #>  5     1 rtu10        5 hru05    pcp144 lrew_tmp lrew_tmp lrew_tmp api_B #>  6     1 rtu10        6 hru06    pcp144 lrew_tmp lrew_tmp lrew_tmp api_B #>  7     1 rtu10        7 hru07    pcp144 lrew_tmp lrew_tmp lrew_tmp api_D #>  8     1 rtu10        8 hru08    pcp144 lrew_tmp lrew_tmp lrew_tmp api_B #>  9     1 rtu10        9 hru09    pcp144 lrew_tmp lrew_tmp lrew_tmp api_C #> 10     1 rtu10       10 hru10    pcp144 lrew_tmp lrew_tmp lrew_tmp api_B #> # … with 39 more rows #> # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"scheduling-operations","dir":"Articles","previous_headings":"A new SWATfarmR project in R","what":"Scheduling operations","title":"Getting started with SWATfarmR","text":"lrew_demo now contains management input file required variables used scheduling conditions. can start scheduling management operations. can use function .$schedule_operations() unlocked reading management input file. .$schedule_operations() three input arguments. first two input arguments start_year end_year. default .$schedule_operations() schedule farm management operations entire time period available variable time series. can see date api starts 1988 (ends 2012). available time period weather data used model setup process. Scheduling farm management operations can quite time intensive may run several hours larger model setups. Thus recommend constrain time window operation scheduling shorter time period time period outside defined time window never used simulations. aware want use time period covered start_year end_year require repeat scheduling. third input argument n_schedule useful speed scheduling process bit reducing number different schedules. n_schedule controls many different schedules per land use routing unit generated. Default unique operation schedule generated HRU. e.g. n_schedule = 1 schedule generated certain land use routing unit land uses within routing unit use schedule. small demo watershed example consists one routing unit 49 HRUs. 3 HRUs use land use ‘lrew_ag1’. case 1 schedule generated n_schedule = 1 two HRUs use schedule (saves computation time scheduling process simply skipped 2 HRUs). e.g n_schedule = 2 first 2 HRUs get different schedules third HRU select one two existing schedules randomly. simple example want generate operation schedules time window 2000 2008. generate two individual schedules per land use.","code":"lrew_demo$schedule_operations(start_year = 2000, end_year = 2008, n_schedule = 2)  #> Scheduling operations: #>  HRU 1 of 49   Time elapsed: 0S   Time remaining: 48S #>    #> Scheduling operations: #>  Finished scheduling 49 HRUs in 11S"},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"writing-operations","dir":"Articles","previous_headings":"A new SWATfarmR project in R","what":"Writing operations","title":"Getting started with SWATfarmR","text":"scheduling successful can write scheduled operations SWAT project using function .$write_operations(). .$write_operations() uses two optional input arguments start_year end_year. Within scheduled time window can select shorter time window write operations . example interesting option want write operations calibration time period, run simulations calibrate model rewrite management validation period. start_year end_year used entire time period scheduled written management files. demo project write management time window 2000 2005. output message can see SWAT+ setup files ‘hru-data.hru’, ‘landuse.lum’, ‘schedule.mgt’, ‘time.sim’ overwritten. ‘landuse.lum’ can see copies initial agricultural land uses made suffix <rout_unit>_<i_schedule> two values added differentiate individual scheduled managements. last suffix either 1 2 limited number individual schedules per land use 2. Fig. 9: Screenshot rewritten ‘landuse.lum’ file SWAT+ project. HRUs ‘hru-data.hru’ now point new land uses ‘landuse.lum’. Fig. 10: Screenshot rewritten ‘hru-data.hru’ file SWAT+ project. Fig. 11 shows screenshot written operation schedule agrl1_mgt_1_1 ‘schedule.mgt’. can see operations 6 years (2000 2005) written. scheduled operation dates now selected based conditions management input file time series weather variables additional variable api. therefore want stress scheduled operation dates always linked simulation period, controlled input file ‘time.sim’. Thus, ‘time.sim’ always written together management schedule. manually changing simulation period ‘time.sim’ loose link scheduling conditions time series variables. Fig. 11: Screenshot rewritten ‘schedule.mgt’ file SWAT+ project.","code":"lrew_demo$write_operations(start_year = 2000, end_year = 2005)  #> Writing management files: #>   - Writing 'hru-data.hru' #>   - Writing 'landuse.lum' and 'schedule.mgt' #>   - Writing 'time.sim' #> Finished writing management schedules in 1S"},{"path":"https://chrisschuerz.github.io/SWATfarmR/articles/SWATfarmR.html","id":"resetting-the-swat-project","dir":"Articles","previous_headings":"A new SWATfarmR project in R","what":"Resetting the SWAT project","title":"Getting started with SWATfarmR","text":"Writing management schedules overwrites original SWAT project input files. farmr project however made copy initial input files overwritten. .$reset_files() can reset project initial version. can instance relevant want setup new farmr project initial state SWAT model setup uses original land use label without suffixes. start new farmr project rewritten ‘landuse.lum’ file, .$read_management() warn land uses now suffix added managements defined management input file. correctly link land uses HRUs operation schedules defined management input file reset input files SWAT project folder first.","code":"lrew_demo$reset_files()  #> Resetting all management files: #>   - Resetting 'hru-data.hru' #>   - Resetting 'landuse.lum' and 'schedule.mgt' #>   - Resetting 'time.sim' #> Finished resetting management files in 0S"},{"path":[]},{"path":"https://chrisschuerz.github.io/SWATfarmR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christoph Schuerz. Author, maintainer.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schuerz C (2022). SWATfarmR: Simple rule based scheduling management operations SWAT. R package version 1.8.0, https://github.com/chrisschuerz/SWATfarmR.","code":"@Manual{,   title = {SWATfarmR: Simple rule based scheduling of management operations in SWAT},   author = {Christoph Schuerz},   year = {2022},   note = {R package version 1.8.0},   url = {https://github.com/chrisschuerz/SWATfarmR}, }"},{"path":"https://chrisschuerz.github.io/SWATfarmR/index.html","id":"swatfarmr-","dir":"","previous_headings":"","what":"Simple rule based scheduling of management operations in SWAT","title":"Simple rule based scheduling of management operations in SWAT","text":"SWATfarmR pre-processing tool scheduling farm management operations SWAT+ SWAT2012 projects. SWATfarmR develops management schedules HRU SWAT model setup based user defined management tables. user can define rules control timing operations. rules can include information temporal constraints, HRU’s spatial properties, climatic external variable control scheduling operation. concept SWATfarmR comparable decision tables concept implemented SWAT+ (Arnold et al., 2018). main difference two concepts SWATfarmR develops management operation schedules model pre-processing, whereas decision tables evaluated model execution.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simple rule based scheduling of management operations in SWAT","text":"can install SWATfarmR package’s GitHub repository: SWATfarmR constantly updated new features find way R package time time. updates fixed issues documented Changelog. Bugs open issues documented R package’s issue section. encounter issues, want suggest new features encourage . Please also check closed issues see question related anything already solved .","code":"# If the package 'remotes' is not installed run first: install.packages(\"remotes\")  remotes::install_github(\"chrisschuerz/SWATfarmR\")"},{"path":"https://chrisschuerz.github.io/SWATfarmR/index.html","id":"package-workflow","dir":"","previous_headings":"","what":"Package workflow","title":"Simple rule based scheduling of management operations in SWAT","text":"SWATfarmR works SWAT project located local hard drive. new_farmr() initiates SWATfarmR project generates ‘farmr object’ R environment ‘*.farm’ file SWAT project folder linked project R environment. initiated ‘farmr object’ reads SWAT project attributes weather data HRU attributes text input files model setup later used management scheduling. Additionally SWAT model attributes ‘farmr object’ includes functions process farm management scheduling SWAT project. SWAT land uses management operations scheduled user must define sequences management operations rules control scheduling management schedule ‘*.csv’ file. function .$read_management() table loaded ‘farmr object’. default rules control scheduling management operations can use variables pcp (daily precipitation) tav, tmn, tmx (daily average, min, max temperature). variables used control scheduling can added function .$add_variable(). .$schedule_operations() sequences farm management operations defined management schedule table scheduled HRUs (land use HRU farm management defined). operation scheduling farm management schedules can written SWAT project’s text input files using function .$write_operations(). can continue working SWATfarmR project time working steps saved ‘*.farm’ file SWAT project folder. want manually save status project can .$save(). load SWATfarmR project continue working R use function load_farmr().","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_edit_timestamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the mgt files in the TxtInOut folder — add_edit_timestamp","title":"Write the mgt files in the TxtInOut folder — add_edit_timestamp","text":"Write mgt files TxtInOut folder","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_edit_timestamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the mgt files in the TxtInOut folder — add_edit_timestamp","text":"","code":"add_edit_timestamp(str)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_edit_timestamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the mgt files in the TxtInOut folder — add_edit_timestamp","text":"path Path TxtInOut folder mgt_raw List original mgt files schedule List tibbles shceduled operations. write_all Logical. TRUE mgt files written HRUs. FALSE mgt files written operations scheduled, initial crop defined. start_year Numeric. Defines start year write operations. end_year Numeric. Defines last year write operations.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_end_year_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the end of year flag at the end of each year in the scheduled mgt table — add_end_year_flag","title":"Add the end of year flag at the end of each year in the scheduled mgt table — add_end_year_flag","text":"Add end year flag end year scheduled mgt table","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_end_year_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the end of year flag at the end of each year in the scheduled mgt table — add_end_year_flag","text":"","code":"add_end_year_flag(schedule_tbl, lookup)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_end_year_flag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the end of year flag at the end of each year in the scheduled mgt table — add_end_year_flag","text":"schedule_tbl Tibble providing scheduled operations HRU ","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_management_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the scheduled management operations in thve mgt file — add_management_schedule","title":"Add the scheduled management operations in thve mgt file — add_management_schedule","text":"Add scheduled management operations thve mgt file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_management_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the scheduled management operations in thve mgt file — add_management_schedule","text":"","code":"add_management_schedule(mgt_file, schedule_tbl)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_management_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the scheduled management operations in thve mgt file — add_management_schedule","text":"mgt_file Lines respective mgt file schedule_tbl Tibble scheduled operations respective HRU","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_skip_year_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the skip year flag for years in the scheduled mgt table where no\r\noperations were set. — add_skip_year_flag","title":"Add the skip year flag for years in the scheduled mgt table where no\r\noperations were set. — add_skip_year_flag","text":"Add skip year flag years scheduled mgt table operations set.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_skip_year_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the skip year flag for years in the scheduled mgt table where no\r\noperations were set. — add_skip_year_flag","text":"","code":"add_skip_year_flag(schedule_tbl, variable, lookup)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_skip_year_flag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the skip year flag for years in the scheduled mgt table where no\r\noperations were set. — add_skip_year_flag","text":"schedule_tbl Tibble providing scheduled operations HRU variable Tibble variable required extract years","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Add additional variables that can be used to define rules for — add_variable","title":"Add additional variables that can be used to define rules for — add_variable","text":"Add additional variables can used define rules ","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add additional variables that can be used to define rules for — add_variable","text":"","code":"add_variable(data, name, assign_unit, overwrite, con, variables)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add additional variables that can be used to define rules for — add_variable","text":"data table added variable. number columns must 1 number subbasins. row number must number weather records. name Character string define name added variable (name must used rule set) assign_unit tibble link spatial units variables data variables Internal variables. defined user. Required number variables. date Internal variable. defined user. Date vector added.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/add_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add additional variables that can be used to define rules for — add_variable","text":"Generates new farmr_project working environment (R6 object) saves project TxtInOut folder.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/as_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert string to numeric without warning — as_num","title":"Convert string to numeric without warning — as_num","text":"Convert string numeric without warning","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/as_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert string to numeric without warning — as_num","text":"","code":"as_num(x)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/as_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert string to numeric without warning — as_num","text":"x Text string","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/check_if_daily.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if all weather inputs are in a daily time interval — check_if_daily","title":"Check if all weather inputs are in a daily time interval — check_if_daily","text":"Check weather inputs daily time interval","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/check_if_daily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if all weather inputs are in a daily time interval — check_if_daily","text":"","code":"check_if_daily(files, project_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/check_if_daily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if all weather inputs are in a daily time interval — check_if_daily","text":"files String vector weather input files project_path String. Path TxtInOut folder SWAT project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/check_mgt_table_2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the read SWAT2012 management schedule tables — check_mgt_table_2012","title":"Check the read SWAT2012 management schedule tables — check_mgt_table_2012","text":"Check read SWAT2012 management schedule tables","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/check_mgt_table_2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the read SWAT2012 management schedule tables — check_mgt_table_2012","text":"","code":"check_mgt_table_2012(mgt_tbl, lookup, hru_attribute)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/check_mgt_table_2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the read SWAT2012 management schedule tables — check_mgt_table_2012","text":"mgt_tbl read management table tibble format lookup List lookup tables plant, tillage, fertilizer hru_attribute Tibble providing attributes HRUs","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/check_mgt_table_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the read SWAT+ management schedule tables — check_mgt_table_plus","title":"Check the read SWAT+ management schedule tables — check_mgt_table_plus","text":"Check read SWAT+ management schedule tables","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/check_mgt_table_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the read SWAT+ management schedule tables — check_mgt_table_plus","text":"","code":"check_mgt_table_plus(mgt_tbl, lookup, hru_attribute)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/check_mgt_table_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the read SWAT+ management schedule tables — check_mgt_table_plus","text":"mgt_tbl read management table tibble format lookup List lookup tables plant, tillage, fertilizer hru_attribute Tibble providing attributes HRUs","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/check_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the SWAT version of the project path — check_version","title":"Identify the SWAT version of the project path — check_version","text":"Identify SWAT version project path","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/check_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the SWAT version of the project path — check_version","text":"","code":"check_version(project_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/check_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the SWAT version of the project path — check_version","text":"project_path Text string path project TxtInOut folder","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/connect_unit_weather.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect the HRUs to the read weather stations — connect_unit_weather","title":"Connect the HRUs to the read weather stations — connect_unit_weather","text":"Connect HRUs read weather stations","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/connect_unit_weather.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect the HRUs to the read weather stations — connect_unit_weather","text":"","code":"connect_unit_weather(project_path, hru_attributes, variables, version)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/connect_unit_weather.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect the HRUs to the read weather stations — connect_unit_weather","text":"project_path Path string SWAT project folder. hru_attributes tibble attributes HRUs variables List tibbles read weather station data","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/connect_weather_2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect the HRUs to the read weather stations for SWAT2012 — connect_weather_2012","title":"Connect the HRUs to the read weather stations for SWAT2012 — connect_weather_2012","text":"Connect HRUs read weather stations SWAT2012","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/connect_weather_2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect the HRUs to the read weather stations for SWAT2012 — connect_weather_2012","text":"","code":"connect_weather_2012(project_path, hru_attributes, variables)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/connect_weather_2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect the HRUs to the read weather stations for SWAT2012 — connect_weather_2012","text":"project_path Path string SWAT project folder. hru_attributes tibble attributes HRUs variables List tibbles read weather station data","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/connect_weather_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect the HRUs to the read weather stations for SWAT+ — connect_weather_plus","title":"Connect the HRUs to the read weather stations for SWAT+ — connect_weather_plus","text":"Connect HRUs read weather stations SWAT+","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/connect_weather_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect the HRUs to the read weather stations for SWAT+ — connect_weather_plus","text":"","code":"connect_weather_plus(project_path, hru_attributes)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/connect_weather_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect the HRUs to the read weather stations for SWAT+ — connect_weather_plus","text":"project_path Path string SWAT project folder. hru_attributes tibble attributes HRUs variables List tibbles read weather station data","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/c_idx.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatinate ranges of idx and idx to a vector of idx — c_idx","title":"Concatinate ranges of idx and idx to a vector of idx — c_idx","text":"Concatinate ranges idx idx vector idx","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/c_idx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatinate ranges of idx and idx to a vector of idx — c_idx","text":"","code":"c_idx(x)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/c_idx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatinate ranges of idx and idx to a vector of idx — c_idx","text":"x Vector providing idx values ranges","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/decay_i.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate decay weights. — decay_i","title":"Calculate decay weights. — decay_i","text":"Calculate decay weights.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/decay_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate decay weights. — decay_i","text":"","code":"decay_i(n, l)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/decay_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate decay weights. — decay_i","text":"n Numeric value number steps reference point. l Numeric value decay rate.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/display_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the progress if iterative processes — display_progress","title":"Display the progress if iterative processes — display_progress","text":"Display progress iterative processes","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/display_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the progress if iterative processes — display_progress","text":"","code":"display_progress(n, nmax, t0, word)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/display_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the progress if iterative processes — display_progress","text":"n Iteration step nmax Number iterations t0 initial time step","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/display_progress_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the progress if iterative processes as percentage value — display_progress_pct","title":"Display the progress if iterative processes as percentage value — display_progress_pct","text":"Display progress iterative processes percentage value","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/display_progress_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the progress if iterative processes as percentage value — display_progress_pct","text":"","code":"display_progress_pct(n, nmax, t0)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/display_progress_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the progress if iterative processes as percentage value — display_progress_pct","text":"n Iteration step nmax Number iterations t0 initial time step","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/document_op_skip.html","id":null,"dir":"Reference","previous_headings":"","what":"Document if an operation scheduling did not result in an operation date — document_op_skip","title":"Document if an operation scheduling did not result in an operation date — document_op_skip","text":"Document operation scheduling result operation date","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/document_op_skip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document if an operation scheduling did not result in an operation date — document_op_skip","text":"","code":"document_op_skip(op_skip, attribute_hru_i, mgt_j, prev_op, j_op, version)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/document_op_skip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document if an operation scheduling did not result in an operation date — document_op_skip","text":"op_skip Tibble documents skipped operations attribute_hru_i Tibble one line provides static HRU mgt_j j_th line mgt table scheduled prev_op Date previous opeation ymd() format. j_op index operation mgt schedule table. version Text string provides SWAT version","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/exp_decay.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative exponential for a vector x. — exp_decay","title":"Cumulative exponential for a vector x. — exp_decay","text":"Cumulative exponential vector x.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/exp_decay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative exponential for a vector x. — exp_decay","text":"","code":"exp_decay(x, n, l)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/exp_decay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative exponential for a vector x. — exp_decay","text":"x Input vector fro cummulative decay calculated. n Numeric value number steps reference point. l Numeric value decay rate.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/extract_hru_2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract HRU attributes from the SWAT2012 .hru files — extract_hru_2012","title":"Extract HRU attributes from the SWAT2012 .hru files — extract_hru_2012","text":"Extract HRU attributes SWAT2012 .hru files","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/extract_hru_2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract HRU attributes from the SWAT2012 .hru files — extract_hru_2012","text":"","code":"extract_hru_2012(str_lines)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/extract_hru_2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract HRU attributes from the SWAT2012 .hru files — extract_hru_2012","text":"str_lines read lines .hru file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/extract_sol_2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract HRU attributes from the SWAT2012 .sol files — extract_sol_2012","title":"Extract HRU attributes from the SWAT2012 .sol files — extract_sol_2012","text":"Extract HRU attributes SWAT2012 .sol files","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/extract_sol_2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract HRU attributes from the SWAT2012 .sol files — extract_sol_2012","text":"","code":"extract_sol_2012(str_lines)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/extract_sol_2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract HRU attributes from the SWAT2012 .sol files — extract_sol_2012","text":"str_lines read lines .sol file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/extract_sol_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract soil names and hydrological soil groups from soils.sol — extract_sol_plus","title":"Extract soil names and hydrological soil groups from soils.sol — extract_sol_plus","text":"Extract soil names hydrological soil groups soils.sol","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/extract_sol_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract soil names and hydrological soil groups from soils.sol — extract_sol_plus","text":"","code":"extract_sol_plus(sol_file)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/extract_sol_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract soil names and hydrological soil groups from soils.sol — extract_sol_plus","text":"sol_file Character string path soils.sol file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/farmr_project.html","id":null,"dir":"Reference","previous_headings":"","what":"farmr_project — farmr_project","title":"farmr_project — farmr_project","text":"farmr_project farmr_project","code":""},{"path":[]},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/farmr_project.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"farmr_project — farmr_project","text":"farmr_project$new() farmr_project$add_variable() farmr_project$read_management() farmr_project$save()","code":""},{"path":[]},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/farmr_project.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"farmr_project — farmr_project","text":"","code":"farmr_project$new(project_name, project_path)"},{"path":[]},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/farmr_project.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"farmr_project — farmr_project","text":"","code":"farmr_project$add_variable(data, name, assign_unit = NULL, overwrite = FALSE)"},{"path":[]},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/farmr_project.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"farmr_project — farmr_project","text":"","code":"farmr_project$read_management(file, discard_schedule = FALSE)"},{"path":[]},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/farmr_project.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"farmr_project — farmr_project","text":"","code":"farmr_project$save()"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/filter_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter the operations based on the defined static rules — filter_attributes","title":"Filter the operations based on the defined static rules — filter_attributes","text":"Filter operations based defined static rules","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/filter_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter the operations based on the defined static rules — filter_attributes","text":"","code":"filter_attributes(mgt_tbl, attribute_hru_i)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/filter_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter the operations based on the defined static rules — filter_attributes","text":"mgt_tbl Tibble provides mgt parameters rules attribute_hru_i Tibble one line provides static HRU attributes","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/finish_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Print message for completed process — finish_progress","title":"Print message for completed process — finish_progress","text":"Print message completed process","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/finish_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print message for completed process — finish_progress","text":"","code":"finish_progress(nmax, t0, word1, word2)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/finish_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print message for completed process — finish_progress","text":"nmax Number iterations t0 initial time step","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/get_os.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the operating system.\r\nThe function was written by Will Lowe and was copied from here:\r\nhttps://conjugateprior.org/2015/06/identifying-the-os-from-r/ — get_os","title":"Identify the operating system.\r\nThe function was written by Will Lowe and was copied from here:\r\nhttps://conjugateprior.org/2015/06/identifying-the-os-from-r/ — get_os","text":"Identify operating system. function written Lowe copied : https://conjugateprior.org/2015/06/identifying--os--r/","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/get_os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the operating system.\r\nThe function was written by Will Lowe and was copied from here:\r\nhttps://conjugateprior.org/2015/06/identifying-the-os-from-r/ — get_os","text":"","code":"get_os()"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/get_station_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the weather station names from SWAT2012 weather input file — get_station_names","title":"Retrieve the weather station names from SWAT2012 weather input file — get_station_names","text":"Retrieve weather station names SWAT2012 weather input file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/get_station_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the weather station names from SWAT2012 weather input file — get_station_names","text":"","code":"get_station_names(file_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/get_station_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the weather station names from SWAT2012 weather input file — get_station_names","text":"file_path String path weather file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/get_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Get numeric value from line in input file — get_value","title":"Get numeric value from line in input file — get_value","text":"Get numeric value line input file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/get_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get numeric value from line in input file — get_value","text":"","code":"get_value(x)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/get_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get numeric value from line in input file — get_value","text":"x text string line.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/grapes-.-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate with a dot — %.%","title":"Concatenate with a dot — %.%","text":"\\","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/grapes-.-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate with a dot — %.%","text":"","code":"a %.% b"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/grapes-and-and-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate with space — %&&%","title":"Concatenate with space — %&&%","text":"\\","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/grapes-and-and-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate with space — %&&%","text":"","code":"a %&&% b"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/grapes-and-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate without separator — %&%","title":"Concatenate without separator — %&%","text":"\\","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/grapes-and-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate without separator — %&%","text":"","code":"a %&% b"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/grapes-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate with a hyphen — %-%","title":"Concatenate with a hyphen — %-%","text":"\\","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/grapes-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate with a hyphen — %-%","text":"","code":"a %-% b"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/grapes-slash-slash-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Paste slash function — %//%","title":"Paste slash function — %//%","text":"\\","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/grapes-slash-slash-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paste slash function — %//%","text":"","code":"a %//% b"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/grapes-_-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate with an underscore — %_%","title":"Concatenate with an underscore — %_%","text":"\\","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/grapes-_-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate with an underscore — %_%","text":"","code":"a %_% b"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/initialize_crop.html","id":null,"dir":"Reference","previous_headings":"","what":"Write values for any initial crop — initialize_crop","title":"Write values for any initial crop — initialize_crop","text":"Write values initial crop","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/initialize_crop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write values for any initial crop — initialize_crop","text":"","code":"initialize_crop(mgt_file, schedule_init)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/initialize_crop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write values for any initial crop — initialize_crop","text":"mgt_file Lines respective mgt file schedule_init tibble crop_init parameters respective HRU","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/jdnyr_to_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert jdn and year columns to a date column — jdnyr_to_date","title":"Convert jdn and year columns to a date column — jdnyr_to_date","text":"Convert jdn year columns date column","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/jdnyr_to_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert jdn and year columns to a date column — jdnyr_to_date","text":"","code":"jdnyr_to_date(tbl)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/jdnyr_to_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert jdn and year columns to a date column — jdnyr_to_date","text":"tbl Tibble containing year jdn columns","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/jdnyr_to_ymdjdn.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert jdn and year columns to year, month, day, and jdn columns — jdnyr_to_ymdjdn","title":"Convert jdn and year columns to year, month, day, and jdn columns — jdnyr_to_ymdjdn","text":"Convert jdn year columns year, month, day, jdn columns","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/jdnyr_to_ymdjdn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert jdn and year columns to year, month, day, and jdn columns — jdnyr_to_ymdjdn","text":"","code":"jdnyr_to_ymdjdn(tbl)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/jdnyr_to_ymdjdn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert jdn and year columns to year, month, day, and jdn columns — jdnyr_to_ymdjdn","text":"tbl Tibble containing year jdn columns","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/load_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading SWAT demo data for testing SWATfarmR — load_demo","title":"Loading SWAT demo data for testing SWATfarmR — load_demo","text":"function can load data sets SWAT2012 SWAT+ demo projects. provided data includes demo projects, management schedule .csv files.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/load_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading SWAT demo data for testing SWATfarmR — load_demo","text":"","code":"load_demo(dataset, path = NULL, version = NULL)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/load_demo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading SWAT demo data for testing SWATfarmR — load_demo","text":"dataset Character string define data set load. Valid inputs dataset = c('project', 'schedule'). dataset = 'project' loads SWAT demo project defined path location returns final project path text string R. definition version required. dataset = 'schedule' writes demo management schedule .csv file demo model setup path location returns file path text string. path Character string defines path copy SWAT demo project demo managment schedule. version Character string defines SWAT version. Options version = c('2012', 'plus'). argument required load SWAT projects shape files.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/load_demo.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading SWAT demo data for testing SWATfarmR — load_demo","text":"learn load different demo data sets SWATfarmR see section Loading demo data package's Get Started page.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/load_farmr.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an existing SWATfarmR project — load_farmr","title":"Load an existing SWATfarmR project — load_farmr","text":"Load existing SWATfarmR project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/load_farmr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an existing SWATfarmR project — load_farmr","text":"","code":"load_farmr(file)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/load_farmr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an existing SWATfarmR project — load_farmr","text":"file File path swatfarmr project located TxtInOut folder.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/load_farmr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an existing SWATfarmR project — load_farmr","text":"Generates new farmr_project working environment (R6 object) saves project TxtInOut folder.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/lum_to_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the mgt files in the TxtInOut folder — lum_to_string","title":"Write the mgt files in the TxtInOut folder — lum_to_string","text":"Write mgt files TxtInOut folder","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/lum_to_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the mgt files in the TxtInOut folder — lum_to_string","text":"","code":"lum_to_string(lum_line)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/lum_to_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the mgt files in the TxtInOut folder — lum_to_string","text":"path Path TxtInOut folder mgt_raw List original mgt files schedule List tibbles shceduled operations. write_all Logical. TRUE mgt files written HRUs. FALSE mgt files written operations scheduled, initial crop defined. start_year Numeric. Defines start year write operations. end_year Numeric. Defines last year write operations.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/new_farmr.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate a new SWATfarmR project — new_farmr","title":"Initiate a new SWATfarmR project — new_farmr","text":"Initiate new SWATfarmR project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/new_farmr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate a new SWATfarmR project — new_farmr","text":"","code":"new_farmr(project_name, project_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/new_farmr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate a new SWATfarmR project — new_farmr","text":"project_name name farmr project. project_path Path SWAT TxtInOut folder farmr applied.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/new_farmr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initiate a new SWATfarmR project — new_farmr","text":"Generates new farmr_project working environment (R6 object) saves project TxtInOut folder.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/plural.html","id":null,"dir":"Reference","previous_headings":"","what":"Add plural 's' to the written message if multiple operations done — plural","title":"Add plural 's' to the written message if multiple operations done — plural","text":"Add plural 's' written message multiple operations done","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/plural.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add plural 's' to the written message if multiple operations done — plural","text":"","code":"plural(n)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/plural.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add plural 's' to the written message if multiple operations done — plural","text":"n Interger number operations","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/prepare_hru.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare the hru-data for writing in SWAT+ and convert it to text lines — prepare_hru","title":"Prepare the hru-data for writing in SWAT+ and convert it to text lines — prepare_hru","text":"Prepare hru-data writing SWAT+ convert text lines","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/prepare_hru.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare the hru-data for writing in SWAT+ and convert it to text lines — prepare_hru","text":"","code":"prepare_hru(mgt_raw, assigned_hrus)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/prepare_hru.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare the hru-data for writing in SWAT+ and convert it to text lines — prepare_hru","text":"mgt_raw List original files relevant mgt scheduling. assigned_hrus Tibble links mgt schedules HRUs.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/prepare_lum_i.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the mgt files in the TxtInOut folder — prepare_lum_i","title":"Write the mgt files in the TxtInOut folder — prepare_lum_i","text":"Write mgt files TxtInOut folder","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/prepare_lum_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the mgt files in the TxtInOut folder — prepare_lum_i","text":"","code":"prepare_lum_i(schedule_i, name_i, lum_raw, start_year, end_year)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/prepare_lum_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the mgt files in the TxtInOut folder — prepare_lum_i","text":"start_year Numeric. Defines start year write operations. end_year Numeric. Defines last year write operations. path Path TxtInOut folder mgt_raw List original mgt files schedule List tibbles shceduled operations. write_all Logical. TRUE mgt files written HRUs. FALSE mgt files written operations scheduled, initial crop defined.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/prepare_schedule_con.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare the management schedule connection table — prepare_schedule_con","title":"Prepare the management schedule connection table — prepare_schedule_con","text":"Prepare management schedule connection table","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/prepare_schedule_con.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare the management schedule connection table — prepare_schedule_con","text":"","code":"prepare_schedule_con(hru_attribute, version)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/prepare_schedule_con.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare the management schedule connection table — prepare_schedule_con","text":"hru_attribute Tibble provides HRU attributes version label indicating SWAT version","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/prepare_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare the variable table for the respective HRU — prepare_variables","title":"Prepare the variable table for the respective HRU — prepare_variables","text":"Prepare variable table respective HRU","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/prepare_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare the variable table for the respective HRU — prepare_variables","text":"","code":"prepare_variables(var_list, hru_var_con, i_hru, version)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/prepare_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare the variable table for the respective HRU — prepare_variables","text":"var_list List tibbles provides time series variables subbasins can implemented dynamic rules. subbasin Number subbasin HRU located","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_attributes_2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Read HRU attributes from the .hru and .sol files in SWAT2012 projects — read_attributes_2012","title":"Read HRU attributes from the .hru and .sol files in SWAT2012 projects — read_attributes_2012","text":"Read HRU attributes .hru .sol files SWAT2012 projects","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_attributes_2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read HRU attributes from the .hru and .sol files in SWAT2012 projects — read_attributes_2012","text":"","code":"read_attributes_2012(project_path, t0)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_attributes_2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read HRU attributes from the .hru and .sol files in SWAT2012 projects — read_attributes_2012","text":"project_path String. Path TxtInOut folder SWAT project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_attributes_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract HRU attributes for SWAT+ projects — read_attributes_plus","title":"Extract HRU attributes for SWAT+ projects — read_attributes_plus","text":"Extract HRU attributes SWAT+ projects","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_attributes_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract HRU attributes for SWAT+ projects — read_attributes_plus","text":"","code":"read_attributes_plus(project_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_attributes_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract HRU attributes for SWAT+ projects — read_attributes_plus","text":"project_path String. Path TxtInOut folder SWAT project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_con_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a SWAT+ connect file — read_con_file","title":"Read a SWAT+ connect file — read_con_file","text":"Read SWAT+ connect file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_con_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a SWAT+ connect file — read_con_file","text":"","code":"read_con_file(con_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_con_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a SWAT+ connect file — read_con_file","text":"con_path Path string SWAT+ connect file.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_hru_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the weather data — read_hru_attributes","title":"Read the weather data — read_hru_attributes","text":"Read weather data","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_hru_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the weather data — read_hru_attributes","text":"","code":"read_hru_attributes(project_path, version, t0)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_hru_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the weather data — read_hru_attributes","text":"project_path String. Path TxtInOut folder SWAT project version String indicates SWAT version project . t0 date time object storing initial start initialization","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_line_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Routine to read SWAT+ input files line wise when necessary due to its structure — read_line_file","title":"Routine to read SWAT+ input files line wise when necessary due to its structure — read_line_file","text":"Routine read SWAT+ input files line wise necessary due structure","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_line_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Routine to read SWAT+ input files line wise when necessary due to its structure — read_line_file","text":"","code":"read_line_file(file_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_line_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Routine to read SWAT+ input files line wise when necessary due to its structure — read_line_file","text":"file_path String. Path file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_lookup_2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the lookup tables for plant, fertilizer, and tillage codes from the SWAT\r\nproject — read_lookup_2012","title":"Read the lookup tables for plant, fertilizer, and tillage codes from the SWAT\r\nproject — read_lookup_2012","text":"Read lookup tables plant, fertilizer, tillage codes SWAT project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_lookup_2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the lookup tables for plant, fertilizer, and tillage codes from the SWAT\r\nproject — read_lookup_2012","text":"","code":"read_lookup_2012(project_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_lookup_2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the lookup tables for plant, fertilizer, and tillage codes from the SWAT\r\nproject — read_lookup_2012","text":"project_path Text string path SWAT TxtInOut folder","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_lookup_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the lookup tables for plant, fertilizer, and tillage codes from the SWAT\r\nproject — read_lookup_plus","title":"Read the lookup tables for plant, fertilizer, and tillage codes from the SWAT\r\nproject — read_lookup_plus","text":"Read lookup tables plant, fertilizer, tillage codes SWAT project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_lookup_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the lookup tables for plant, fertilizer, and tillage codes from the SWAT\r\nproject — read_lookup_plus","text":"","code":"read_lookup_plus(project_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_lookup_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the lookup tables for plant, fertilizer, and tillage codes from the SWAT\r\nproject — read_lookup_plus","text":"project_path Text string path SWAT TxtInOut folder","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SWAT mgt input files for SWAT2012 — read_mgt_2012","title":"Read SWAT mgt input files for SWAT2012 — read_mgt_2012","text":"Read SWAT mgt input files SWAT2012","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SWAT mgt input files for SWAT2012 — read_mgt_2012","text":"","code":"read_mgt_2012(project_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SWAT mgt input files for SWAT2012 — read_mgt_2012","text":"project_path String. Path TxtInOut folder SWAT project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the raw management data for backup — read_mgt_init","title":"Read the raw management data for backup — read_mgt_init","text":"Read raw management data backup","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the raw management data for backup — read_mgt_init","text":"","code":"read_mgt_init(project_path, version)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the raw management data for backup — read_mgt_init","text":"project_path String. Path TxtInOut folder SWAT project version String indicates SWAT version project .","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_lkp.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the management schedule table from a csv file — read_mgt_lkp","title":"Read the management schedule table from a csv file — read_mgt_lkp","text":"Read management schedule table csv file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_lkp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the management schedule table from a csv file — read_mgt_lkp","text":"","code":"read_mgt_lkp(file, version, project_path, hru_attribute)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_lkp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the management schedule table from a csv file — read_mgt_lkp","text":"file Text string path csv file version String indicates SWAT version project .","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SWAT mgt input files for SWAT+ — read_mgt_plus","title":"Read SWAT mgt input files for SWAT+ — read_mgt_plus","text":"Read SWAT mgt input files SWAT+","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SWAT mgt input files for SWAT+ — read_mgt_plus","text":"","code":"read_mgt_plus(project_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SWAT mgt input files for SWAT+ — read_mgt_plus","text":"project_path String. Path TxtInOut folder SWAT project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_table_2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the management schedule table from a csv file for SWAT2012 — read_mgt_table_2012","title":"Read the management schedule table from a csv file for SWAT2012 — read_mgt_table_2012","text":"Read management schedule table csv file SWAT2012","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_table_2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the management schedule table from a csv file for SWAT2012 — read_mgt_table_2012","text":"","code":"read_mgt_table_2012(file)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_table_2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the management schedule table from a csv file for SWAT2012 — read_mgt_table_2012","text":"file Text string path csv file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_table_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the management schedule table from a csv file for SWAT+ — read_mgt_table_plus","title":"Read the management schedule table from a csv file for SWAT+ — read_mgt_table_plus","text":"Read management schedule table csv file SWAT+","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_table_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the management schedule table from a csv file for SWAT+ — read_mgt_table_plus","text":"","code":"read_mgt_table_plus(file)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_mgt_table_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the management schedule table from a csv file for SWAT+ — read_mgt_table_plus","text":"file Text string path csv file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_plt_comm.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the SWAT+ plant.ini file — read_plt_comm","title":"Read the SWAT+ plant.ini file — read_plt_comm","text":"Read SWAT+ plant.ini file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_plt_comm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the SWAT+ plant.ini file — read_plt_comm","text":"","code":"read_plt_comm(comm_file)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_plt_comm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the SWAT+ plant.ini file — read_plt_comm","text":"comm_file Text string path plant.ini file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_rtu_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Routine to read the SWAT+ routing unit definition — read_rtu_def","title":"Routine to read the SWAT+ routing unit definition — read_rtu_def","text":"Routine read SWAT+ routing unit definition","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_rtu_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Routine to read the SWAT+ routing unit definition — read_rtu_def","text":"","code":"read_rtu_def(project_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_rtu_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Routine to read the SWAT+ routing unit definition — read_rtu_def","text":"project_path String. Path TxtInOut folder SWAT project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_table_linewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Read text file tables safely linewise and then convert to table — read_table_linewise","title":"Read text file tables safely linewise and then convert to table — read_table_linewise","text":"Read text file tables safely linewise convert table","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_table_linewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read text file tables safely linewise and then convert to table — read_table_linewise","text":"","code":"read_table_linewise(file_path, col_names, col_types, n_skip)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_table_linewise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read text file tables safely linewise and then convert to table — read_table_linewise","text":"file_path String. Path file col_names Vector column names. 'get' names estracted tne n_skip - 1 line. col_types Vector col types. 'c' character, 'd' double n_skip Number lines skip","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_weather.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the weather data — read_weather","title":"Read the weather data — read_weather","text":"Read weather data","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_weather.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the weather data — read_weather","text":"","code":"read_weather(project_path, version)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_weather.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the weather data — read_weather","text":"project_path String. Path TxtInOut folder SWAT project version String indicates SWAT version project .","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_weather_2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the weather data for a SWAT2012 project — read_weather_2012","title":"Read the weather data for a SWAT2012 project — read_weather_2012","text":"Read weather data SWAT2012 project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_weather_2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the weather data for a SWAT2012 project — read_weather_2012","text":"","code":"read_weather_2012(project_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_weather_2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the weather data for a SWAT2012 project — read_weather_2012","text":"project_path String. Path TxtInOut folder SWAT project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_weather_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a SWAT2012 weather input file — read_weather_file","title":"Read a SWAT2012 weather input file — read_weather_file","text":"Read SWAT2012 weather input file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_weather_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a SWAT2012 weather input file — read_weather_file","text":"","code":"read_weather_file(file, var, skip, digit_var, digit_date)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_weather_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a SWAT2012 weather input file — read_weather_file","text":"file Path string weather input file. var Character vector defines variables skip Integer skip header digit_var Integer, number digits per variable digit_date Vector length 2 Integers give digits year jdn","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_weather_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the weather data for a SWAT+ project — read_weather_plus","title":"Read the weather data for a SWAT+ project — read_weather_plus","text":"Read weather data SWAT+ project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_weather_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the weather data for a SWAT+ project — read_weather_plus","text":"","code":"read_weather_plus(project_path)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/read_weather_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the weather data for a SWAT+ project — read_weather_plus","text":"project_path String. Path TxtInOut folder SWAT project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/reset_hru_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset the file 'hru-data.hru' file of a SWAT+ setup to the initial file — reset_hru_plus","title":"Reset the file 'hru-data.hru' file of a SWAT+ setup to the initial file — reset_hru_plus","text":"Reset file 'hru-data.hru' file SWAT+ setup initial file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/reset_hru_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset the file 'hru-data.hru' file of a SWAT+ setup to the initial file — reset_hru_plus","text":"","code":"reset_hru_plus(mgt_raw)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/reset_hru_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset the file 'hru-data.hru' file of a SWAT+ setup to the initial file — reset_hru_plus","text":"mgt_raw List original mgt files","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/reset_lum_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset the file 'landuse.lum' file of a SWAT+ setup to the initial file — reset_lum_plus","title":"Reset the file 'landuse.lum' file of a SWAT+ setup to the initial file — reset_lum_plus","text":"Reset file 'landuse.lum' file SWAT+ setup initial file","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/reset_lum_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset the file 'landuse.lum' file of a SWAT+ setup to the initial file — reset_lum_plus","text":"","code":"reset_lum_plus(mgt_raw)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/reset_lum_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset the file 'landuse.lum' file of a SWAT+ setup to the initial file — reset_lum_plus","text":"mgt_raw List original mgt files","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/reset_mgt.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset all management files back to the original files — reset_mgt","title":"Reset all management files back to the original files — reset_mgt","text":"Reset management files back original files","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/reset_mgt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset all management files back to the original files — reset_mgt","text":"","code":"reset_mgt(path, mgt_raw, version)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/reset_mgt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset all management files back to the original files — reset_mgt","text":"path Tibble Path TxtInOut folder mgt_raw List original mgt files","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/sample_management.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample management type if different management types are provided for the\r\nsame land use — sample_management","title":"Sample management type if different management types are provided for the\r\nsame land use — sample_management","text":"Sample management type different management types provided land use","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/sample_management.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample management type if different management types are provided for the\r\nsame land use — sample_management","text":"","code":"sample_management(mgt_tbl)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/sample_management.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample management type if different management types are provided for the\r\nsame land use — sample_management","text":"mgt_tbl Tibble provides mgt parameters rules","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/schedule_date_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Schedule the operation date for the operation j — schedule_date_j","title":"Schedule the operation date for the operation j — schedule_date_j","text":"Schedule operation date operation j","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/schedule_date_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schedule the operation date for the operation j — schedule_date_j","text":"","code":"schedule_date_j(var_tbl, eval_str, prev_op)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/schedule_date_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schedule the operation date for the operation j — schedule_date_j","text":"var_tbl Tibble variable time series HRU eval_str Text string expression dynamic rule evaulated select date. prev_op Date previous opeation ymd() format.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/schedule_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Schedule the initial crop operation — schedule_init","title":"Schedule the initial crop operation — schedule_init","text":"Schedule initial crop operation","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/schedule_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schedule the initial crop operation — schedule_init","text":"","code":"schedule_init(mgt_op, version)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/schedule_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schedule the initial crop operation — schedule_init","text":"mgt_op Tibble one line current operation version Text string provides SWAT version","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/schedule_operation.html","id":null,"dir":"Reference","previous_headings":"","what":"Schedule management operations for all HRUs based on static and dynamic rules — schedule_operation","title":"Schedule management operations for all HRUs based on static and dynamic rules — schedule_operation","text":"Schedule management operations HRUs based static dynamic rules","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/schedule_operation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schedule management operations for all HRUs based on static and dynamic rules — schedule_operation","text":"","code":"schedule_operation(   mgt_schedule,   variables,   lookup,   hru_attribute,   var_con,   start_year,   end_year,   n_schedule,   version )"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/schedule_operation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schedule management operations for all HRUs based on static and dynamic rules — schedule_operation","text":"mgt_schedule Tibble provides mgt parameters rules variables List tibbles provides time series variables subbasins can implemented dynamic rules. lookup list tibbles lookup tables plant, tillage, fertilizer codes SWAT data base. hru_attribute Tibble provides static HRU attributes","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/schedule_op_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the operation j in the opeation schedule for HRU i — schedule_op_j","title":"Add the operation j in the opeation schedule for HRU i — schedule_op_j","text":"Add operation j opeation schedule HRU ","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/schedule_op_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the operation j in the opeation schedule for HRU i — schedule_op_j","text":"","code":"schedule_op_j(schedule_i, mgt_j, date_j, init_lbl, version)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/schedule_op_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the operation j in the opeation schedule for HRU i — schedule_op_j","text":"schedule_i Scheduled operations table HRU mgt_j j_th line mgt table scheduled date_j calculated date mgt operation j","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/set_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Set colnames of a data frame or matrix — set_colnames","title":"Set colnames of a data frame or matrix — set_colnames","text":"Set colnames data frame matrix","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/set_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set colnames of a data frame or matrix — set_colnames","text":"","code":"set_colnames(x, nm)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/set_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set colnames of a data frame or matrix — set_colnames","text":"x Data frame matrix nm Character names vector","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/set_skip_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the skip flag for entries in the list of tibbles with only one row and\r\nall NA values for operation — set_skip_flag","title":"Set the skip flag for entries in the list of tibbles with only one row and\r\nall NA values for operation — set_skip_flag","text":"Set skip flag entries list tibbles one row NA values operation","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/set_skip_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the skip flag for entries in the list of tibbles with only one row and\r\nall NA values for operation — set_skip_flag","text":"","code":"set_skip_flag(tbl, skip_flag)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/set_skip_flag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the skip flag for entries in the list of tibbles with only one row and\r\nall NA values for operation — set_skip_flag","text":"tbl Tibble list tibbles grouped years","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/sort_mgt.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort the management schedules by name, unit (sub or rtu), and number of realization. — sort_mgt","title":"Sort the management schedules by name, unit (sub or rtu), and number of realization. — sort_mgt","text":"Sort management schedules name, unit (sub rtu), number realization.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/sort_mgt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort the management schedules by name, unit (sub or rtu), and number of realization. — sort_mgt","text":"","code":"sort_mgt(mgt)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/sort_mgt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort the management schedules by name, unit (sub or rtu), and number of realization. — sort_mgt","text":"path Path TxtInOut folder mgt_raw List original mgt files schedule List tibbles shceduled operations. write_all Logical. TRUE mgt files written HRUs. FALSE mgt files written operations scheduled, initial crop defined. start_year Numeric. Defines start year write operations. end_year Numeric. Defines last year write operations.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/translate_mgt_table_2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate the operation and management labels into SWAT codes — translate_mgt_table_2012","title":"Translate the operation and management labels into SWAT codes — translate_mgt_table_2012","text":"Translate operation management labels SWAT codes","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/translate_mgt_table_2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate the operation and management labels into SWAT codes — translate_mgt_table_2012","text":"","code":"translate_mgt_table_2012(mgt_tbl, lookup)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/translate_mgt_table_2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate the operation and management labels into SWAT codes — translate_mgt_table_2012","text":"mgt_tbl Loaded tibble management operation schedules lookup List lookup tables","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/translate_mgt_table_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate the operation and management labels into SWAT+ labels — translate_mgt_table_plus","title":"Translate the operation and management labels into SWAT+ labels — translate_mgt_table_plus","text":"Translate operation management labels SWAT+ labels","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/translate_mgt_table_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate the operation and management labels into SWAT+ labels — translate_mgt_table_plus","text":"","code":"translate_mgt_table_plus(mgt_tbl, lookup)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/translate_mgt_table_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate the operation and management labels into SWAT+ labels — translate_mgt_table_plus","text":"mgt_tbl Loaded tibble management operation schedules lookup List lookup tables","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/variable_decay.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative exponential decay. — variable_decay","title":"Cumulative exponential decay. — variable_decay","text":"function can used calculate new farmR variables account events occurring n_step 0 time steps , 0 n_step time steps certain reference point time (t_0). Decreasing weights assigned considered time steps reference point using exponential decay function certain decay_rate.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/variable_decay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative exponential decay. — variable_decay","text":"","code":"variable_decay(variable, n_steps, decay_rate)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/variable_decay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative exponential decay. — variable_decay","text":"variable Tibble input variable columns subbasin row time step. variables farmR object can also used . n_steps Numeric value number times steps reference point. Negative values consider time steps positive values . decay_rate Numeric value controls rate decay values time steps .","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/variable_decay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative exponential decay. — variable_decay","text":"Application examples can consideration antecedent precipitation, recent events relevant events several days ago (can act proxy soil moisture).","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/variable_decay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative exponential decay. — variable_decay","text":"","code":"if (FALSE) { # Unit input, varying decay rates: x <- data.frame(x_1 = c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0)) y1<- variable_decay(x, -10, 1) y2<- variable_decay(x, -10, 0.8) y3<- variable_decay(x, -10, 0.25)  plot(y1$x_1, type = \"l\", col = 1) lines(y2$x_1, col = 2) lines(y3$x_1, col = 3)  # Antecedent precipitation index with 5 time steps and a decay rate of 0.8: pcp <- data.frame(pcp_1 = c(0,3,7,10,2,0,0,5,2,0)) time_steps <- -5 rate <- 0.8 api <- variable_decay(pcp, time_steps, rate) plot(pcp$pcp_1, ylim = c(0,15), pch = 3) lines(api$pcp_1) }"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/write_file_cio.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the start and end dates into the file.cio — write_file_cio","title":"Write the start and end dates into the file.cio — write_file_cio","text":"Write start end dates file.cio","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/write_file_cio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the start and end dates into the file.cio — write_file_cio","text":"","code":"write_file_cio(path, start_year, end_year)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/write_file_cio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the start and end dates into the file.cio — write_file_cio","text":"path Path TxtInOut folder start_year Numeric. Defines start year write operations. end_year Numeric. Defines last year write operations.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/write_operation.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the mgt schedules into the respective files in the TxtInOut folder — write_operation","title":"Write the mgt schedules into the respective files in the TxtInOut folder — write_operation","text":"Write mgt schedules respective files TxtInOut folder","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/write_operation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the mgt schedules into the respective files in the TxtInOut folder — write_operation","text":"","code":"write_operation(   path,   mgt_raw,   schedule,   assigned_hrus,   start_year,   end_year,   year_range,   version )"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/write_operation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the mgt schedules into the respective files in the TxtInOut folder — write_operation","text":"path Path TxtInOut folder mgt_raw List original files relevant mgt scheduling. schedule List tibbles scheduled operations. assigned_hrus Tibble links mgt schedules HRUs start_year Numeric. Defines start year write operations. end_year Numeric. Defines last year write operations. year_range numeric vector start end year scheduled operations. version String indicates SWAT version.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/write_op_2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the management schedules for a SWAT2012 project — write_op_2012","title":"Write the management schedules for a SWAT2012 project — write_op_2012","text":"Write management schedules SWAT2012 project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/write_op_2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the management schedules for a SWAT2012 project — write_op_2012","text":"","code":"write_op_2012(path, mgt_raw, schedule, assigned_hrus, start_year, end_year)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/write_op_2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the management schedules for a SWAT2012 project — write_op_2012","text":"path Path TxtInOut folder mgt_raw List original files relevant mgt scheduling. schedule List tibbles scheduled operations. assigned_hrus Tibble links mgt schedules HRUs start_year Numeric. Defines start year write operations. end_year Numeric. Defines last year write operations.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/write_op_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the management schedules for a SWAT+ project — write_op_plus","title":"Write the management schedules for a SWAT+ project — write_op_plus","text":"Write management schedules SWAT+ project","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/write_op_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the management schedules for a SWAT+ project — write_op_plus","text":"","code":"write_op_plus(path, mgt_raw, schedule, assigned_hrus, start_year, end_year)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/write_op_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the management schedules for a SWAT+ project — write_op_plus","text":"path Path TxtInOut folder mgt_raw List original files relevant mgt scheduling. schedule List tibbles scheduled operations. assigned_hrus Tibble links mgt schedules HRUs start_year Numeric. Defines start year write operations. end_year Numeric. Defines last year write operations.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/w_lin.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear function to calculate weight transition between boundaries. — w_lin","title":"Linear function to calculate weight transition between boundaries. — w_lin","text":"Linear function calculate weight transition boundaries.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/w_lin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear function to calculate weight transition between boundaries. — w_lin","text":"","code":"w_lin(x, lw_bd, up_bd)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/w_lin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear function to calculate weight transition between boundaries. — w_lin","text":"x Numeric value calculate weight lwr Numeric value lower boundary. x <= lwr function returns 0 weight. upr Numeric value upper boundary. x >= upr function returns 1 weight.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/w_lin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear function to calculate weight transition between boundaries. — w_lin","text":"","code":"if (FALSE) { # All examples below must be included in the dynamic # rules in the management csv file to be effective.  # Low weight for days below 0 degC with a # linear transition from 5 degC to 0 degC: tmp <- -5:10 weight <- linear(tmp, 0, 5) plot(tmp, weight)  # Low weight for days with high precipitation # (transition range: 2 to 10 mm) pcp <- 0:12 weight <- (1 - linear(pcp, 0, 5)) plot(pcp, weight)  # Harvesting crop in optimum PHU fraction range 1 to 1.1 hu_fr <- seq(0.75, 1.4, 0.01) weight <- linear(hu_fr, 0.9, 1) * (1 - linear(hu_fr, 1.1, 1.2)) }"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/w_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic function to calculate weight transition between boundaries. — w_log","title":"Logistic function to calculate weight transition between boundaries. — w_log","text":"Logistic function calculate weight transition boundaries.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/w_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic function to calculate weight transition between boundaries. — w_log","text":"","code":"w_log(x, lwr, upr)"},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/w_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic function to calculate weight transition between boundaries. — w_log","text":"x Numeric value calculate weight lwr Numeric value lower boundary. x = lwr function returns ~0.01 weight. upr Numeric value upper boundary. x = upr function returns ~0.99 weight.","code":""},{"path":"https://chrisschuerz.github.io/SWATfarmR/reference/w_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logistic function to calculate weight transition between boundaries. — w_log","text":"","code":"if (FALSE) { # All examples below must be included in the dynamic # rules in the management csv file to be effective.  # Low weight for days below 0 degC with a # logistic transition from 5 degC to 0 degC: tmp <- -5:10 weight <- logistic(tmp, 0, 5) plot(tmp, weight)  # Low weight for days with high precipitation # (transition range: 2 to 10 mm) pcp <- 0:12 weight <- (1 - logistic(pcp, 0, 5)) plot(pcp, weight)  # Harvesting crop in optimum PHU fraction range 1 to 1.1 hu_fr <- seq(0.75, 1.4, 0.01) weight <- logistic(hu_fr, 0.9, 1) * (1 - logistic(hu_fr, 1.1, 1.2)) }"}]
